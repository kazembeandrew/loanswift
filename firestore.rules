rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return request.auth.token.role in ['admin', 'ceo'];
    }

    function isCfo() {
      return request.auth.token.role in ['admin', 'ceo', 'cfo'];
    }
    
    function isLoanOfficerOrAdmin() {
      return request.auth.token.role in ['loan_officer', 'admin', 'ceo', 'cfo'];
    }

    function isHrOrAdmin() {
      return request.auth.token.role in ['hr', 'admin', 'ceo'];
    }

    function isAnyStaff() {
      return request.auth.token.role in ['loan_officer', 'admin', 'ceo', 'cfo', 'hr'];
    }

    // User profile documents
    match /users/{userId} {
      allow read: if request.auth != null; // Any authenticated user can read profiles (for chat, etc.)
      allow create: if request.auth.uid == userId; // A user can create their own profile document
      allow update: if request.auth.uid == userId || isAdmin();
    }

    // Settings can only be read by any user, but only modified by admin/ceo
    match /settings/{docId} {
        allow read: if request.auth != null;
        allow write: if isAdmin();
    }

    // Loans and Borrowers can be managed by officers, admins, and ceo
    match /borrowers/{borrowerId} {
        allow read, write: if isAnyStaff();
    }
    match /loans/{loanId} {
        allow read, write: if isLoanOfficerOrAdmin();
    }
    match /loans/{loanId}/payments/{paymentId} {
        allow read, write: if isLoanOfficerOrAdmin();
    }

    // Situation Reports
    match /situationReports/{reportId} {
        allow read, create: if isAnyStaff();
        allow update: if isLoanOfficerOrAdmin();
    }

    // Chat functionality
    match /conversations/{conversationId} {
        allow read, write: if request.auth.uid in resource.data.participants;
    }
    match /conversations/{conversationId}/messages/{messageId} {
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
    }
    
    // Accounting documents can only be accessed by finance-related roles
    match /accounts/{accountId} {
        allow read, write: if isCfo();
    }
    match /journal/{entryId} {
        allow read, write: if isCfo();
    }
    
    // Deletion requests are not used in the app, so we can restrict them.
    match /deletionRequests/{requestId} {
        allow read, write: if false;
    }
    
  }
}
