rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isRole(role) {
      return request.auth.token.role == role;
    }

    function isOneOfRoles(roles) {
      return request.auth.token.role in roles;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    // User profile documents
    match /users/{userId} {
      allow read: if request.auth != null; // Any authenticated user can read profiles (for chat, etc.)
      allow create: if isOwner(userId); // A user can create their own profile document
      allow update: if isOwner(userId) || isOneOfRoles(['admin', 'hr']);
    }

    // Settings can only be read by any user, but only modified by admin
    match /settings/{docId} {
        allow read: if request.auth != null;
        allow write: if isOneOfRoles(['admin']);
    }

    // Loans and Borrowers can be managed by officers, admins, and ceo/cfo
    match /borrowers/{borrowerId} {
        allow read, write: if isOneOfRoles(['loan_officer', 'admin', 'ceo', 'cfo']);
    }
    match /loans/{loanId} {
        allow read, write: if isOneOfRoles(['loan_officer', 'admin', 'ceo', 'cfo']);
    }
    match /loans/{loanId}/payments/{paymentId} {
        allow read, write: if isOneOfRoles(['loan_officer', 'admin', 'ceo', 'cfo']);
    }

    // Situation Reports
    match /situationReports/{reportId} {
      allow create: if request.auth != null; // Any authenticated user can create a report
      allow read: if isOneOfRoles(['loan_officer', 'admin', 'ceo', 'cfo', 'hr']); // All staff can read reports
      allow update: if isOneOfRoles(['admin', 'ceo', 'cfo']); // Only management can update/resolve reports
    }

    // Chat functionality
    match /conversations/{conversationId} {
        allow read, write: if request.auth.uid in resource.data.participants;
    }
    match /conversations/{conversationId}/messages/{messageId} {
        allow read, write: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[0] == request.auth.uid || 
                     get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants[1] == request.auth.uid;
    }
    
    // Accounting documents can only be accessed by finance-related roles
    match /accounts/{accountId} {
        allow read, write: if isOneOfRoles(['admin', 'ceo', 'cfo']);
    }
    match /journal/{entryId} {
        allow read, write: if isOneOfRoles(['admin', 'ceo', 'cfo']);
    }
    
  }
}
