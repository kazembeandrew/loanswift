
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper Functions
    function isCEO() { return request.auth.token.role == 'ceo'; }
    function isCFO() { return request.auth.token.role == 'cfo'; }
    function isAdmin() { return request.auth.token.role == 'admin'; }
    function isHR() { return request.auth.token.role == 'hr'; }
    function isLoanOfficer() { return request.auth.token.role == 'loan_officer'; }
    function isOwner(userId) { return request.auth.uid == userId; }
    function isManagement() { return isAdmin() || isCEO() || isCFO(); }
    function isLoanStaff() { return isManagement() || isLoanOfficer(); }

    // USER PROFILES
    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // BORROWERS
    match /borrowers/{borrowerId} {
      allow get: if isLoanStaff();
      allow list: if isLoanStaff();
      allow create, update: if isLoanOfficer() || isManagement();
      allow delete: if isManagement();
    }

    // LOANS
    match /loans/{loanId} {
      allow get: if isLoanStaff();
      allow list: if isLoanStaff();
      allow create, update: if isLoanOfficer() || isManagement();
      allow delete: if isManagement();
    }

    // PAYMENTS (Subcollection of Loans)
    match /loans/{loanId}/payments/{paymentId} {
      allow get: if isLoanStaff();
      allow list: if isLoanStaff();
      allow create: if isLoanOfficer() || isManagement();
      allow update, delete: if isManagement();
    }

    // SETTINGS
    match /settings/{settingId} {
      allow get, list: if isManagement();
      allow create, update, delete: if isAdmin();
    }
    
    // ACCOUNTS
    match /accounts/{accountId} {
        allow get, list: if isManagement();
        allow create, update, delete: if isManagement();
    }
    
    // JOURNAL
    match /journal/{entryId} {
        allow get, list: if isManagement();
        allow create, update, delete: if isManagement();
    }
    
    // MONTH END CLOSURES
    match /monthEndClosures/{periodId} {
        allow get, list: if isManagement();
        allow create: if isCFO(); // CFO can initiate
        allow update: if (isCEO() && resource.data.status == 'pending_approval') || // CEO can approve
                         (isCFO() && resource.data.status == 'approved'); // CFO can process
        allow delete: if isAdmin(); // Only admin can delete a closure record
    }

    // CHAT / CONVERSATIONS
    match /conversations/{conversationId} {
      allow get: if request.auth.uid in resource.data.participants;
      allow list: if request.auth.uid in request.query.where.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
      allow update: if request.auth.uid in resource.data.participants; // For updating last message
      allow delete: if false; // Disallow deleting conversations for now
    }
    
    match /conversations/{conversationId}/messages/{messageId} {
       allow get, list: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
       allow create: if request.auth.uid == request.resource.data.senderId;
       allow update, delete: if false;
    }
    
    // SITUATION REPORTS
    match /situationReports/{reportId} {
      allow get: if isLoanStaff();
      allow list: if isLoanStaff();
      allow create: if isLoanOfficer();
      allow update: if isManagement(); // Only management can change status
      allow delete: if isAdmin();
    }
  }
}
