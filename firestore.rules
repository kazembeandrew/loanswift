
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isLoanOfficerOrAbove() {
      return request.auth.token.role in ['loan_officer', 'cfo', 'ceo', 'admin'];
    }
    
    function isAdmin() {
      return request.auth.token.role == 'admin';
    }

    function isHr() {
        return request.auth.token.role == 'hr';
    }

    function isCfoOrAbove() {
        return request.auth.token.role in ['cfo', 'ceo', 'admin'];
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      allow get, list: if request.auth != null;
      allow create: if isAdmin() || isHr();
      allow update: if isOwner(userId) || isAdmin() || isHr();
    }
    
    match /borrowers/{borrowerId} {
      allow get: if isLoanOfficerOrAbove();
      allow list: if isLoanOfficerOrAbove();
      allow create, update: if isLoanOfficerOrAbove();
    }
    
    match /loans/{loanId} {
      allow get: if isLoanOfficerOrAbove();
      allow list: if isLoanOfficerOrAbove();
      allow create, update: if isLoanOfficerOrAbove();
    }

    match /loans/{loanId}/payments/{paymentId} {
        allow read, create: if isLoanOfficerOrAbove();
    }

    match /accounts/{accountId} {
      allow get, list: if isCfoOrAbove();
      allow create, update: if isCfoOrAbove();
    }

    match /journal/{entryId} {
      allow get, list: if isCfoOrAbove();
      allow create: if isCfoOrAbove();
    }
    
    match /settings/{settingId} {
      allow get, update: if isAdmin();
    }

    match /conversations/{conversationId} {
      allow get, list: if request.auth.uid in resource.data.participants;
      allow create: if request.auth.uid in request.resource.data.participants;
      allow update: if request.auth.uid in resource.data.participants;
    }

    match /conversations/{conversationId}/messages/{messageId} {
        allow read, create: if get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants.hasAny([request.auth.uid]);
    }
    
    match /situationReports/{reportId} {
        allow read, create: if isLoanOfficerOrAbove();
        allow update: if isCfoOrAbove();
    }
  }
}
