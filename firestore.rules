rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isStaff() {
      return request.auth != null && request.auth.token.role in ['loan_officer', 'admin', 'ceo', 'cfo', 'hr'];
    }

    function isFinance() {
      return request.auth != null && request.auth.token.role in ['admin', 'ceo', 'cfo'];
    }

    function isManagement() {
      return request.auth != null && request.auth.token.role in ['admin', 'ceo'];
    }

    function isAdminOrHR() {
      return request.auth != null && request.auth.token.role in ['admin', 'hr'];
    }

    // User profile documents
    match /users/{userId} {
      // Anyone authenticated can read user profiles (for chat, etc.)
      allow read: if request.auth != null;
      // Users can create their own profile. Admins can create profiles.
      allow create: if request.auth.uid == userId || isAdminOrHR();
      // Users can update their own profile, or admins/HR can.
      allow update: if request.auth.uid == userId || isAdminOrHR();
    }

    // Settings can be read by any staff, but only modified by management.
    match /settings/{docId} {
        allow read: if isStaff();
        allow write: if isManagement();
    }

    // Core lending data can be managed by staff.
    match /borrowers/{borrowerId} {
        allow read, write: if isStaff();
    }
    match /loans/{loanId} {
        allow read, write: if isStaff();
    }
    match /loans/{loanId}/payments/{paymentId} {
        allow read, write: if isStaff();
    }

    // Situation Reports
    match /situationReports/{reportId} {
        // Any staff member can create or read reports.
        allow read, create: if isStaff();
        // Only management can update (e.g., change status).
        allow update: if isManagement();
    }

    // Chat functionality
    match /conversations/{conversationId} {
        // Participants can read/write the conversation document.
        allow read, write: if request.auth.uid in resource.data.participants;
    }
    match /conversations/{conversationId}/messages/{messageId} {
        // Participants of a conversation can read/write messages.
        allow read, write: if request.auth.uid in get(/databases/$(database)/documents/conversations/$(conversationId)).data.participants;
    }

    // Accounting documents can only be accessed by finance-related roles.
    match /accounts/{accountId} {
        allow read, write: if isFinance();
    }
    match /journal/{entryId} {
        allow read, write: if isFinance();
    }

  }
}
